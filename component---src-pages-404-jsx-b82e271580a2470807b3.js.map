{"version":3,"sources":["webpack:///./src/pages/404.jsx","webpack:///./src/components/seo.jsx","webpack:///./src/components/footer.jsx","webpack:///./src/components/layout.jsx"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","NotFoundPage","a","createElement","title","SEO","_ref","description","lang","meta","site","_2417117884","data","metaDescription","siteMetadata","react_default","Helmet_default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Footer","rbx","style","paddingBottom","textAlign","Date","getFullYear","Layout","children","_2787201768","Fragment","seo","color","size","Body","Foot","footer"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAWeO,UAPM,kBACnBH,EAAAI,EAAAC,cAACH,EAAA,EAAD,CAAQI,MAAM,kBACZN,EAAAI,EAAAC,cAAA,uBACAL,EAAAI,EAAAC,cAAA,oaCKJ,SAASE,EAATC,GAAiD,IAAlCC,EAAkCD,EAAlCC,YAAaC,EAAqBF,EAArBE,KAAMC,EAAeH,EAAfG,KAAML,EAASE,EAATF,MAC9BM,EADuCC,EAAAC,KACvCF,KAcFG,EAAkBN,GAAeG,EAAKI,aAAaP,YAEzD,OACEQ,EAAAb,EAAAC,cAACa,EAAAd,EAAD,CACEe,eAAgB,CACdT,QAEFJ,MAAOA,EACPc,cAAa,QAAUR,EAAKI,aAAaV,MACzCK,KAAM,CACJ,CACEU,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAAShB,GAEX,CACEiB,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASV,EAAKI,aAAaQ,QAE7B,CACEH,KAAI,gBACJC,QAAShB,GAEX,CACEe,KAAI,sBACJC,QAASP,IAEXU,OAAOd,KAKfJ,EAAImB,aAAe,CACjBhB,KAAI,KACJC,KAAM,GACNF,YAAW,IAUEF,QC9EAoB,EANA,SAAAnB,GAAA,IAAGgB,EAAHhB,EAAGgB,OAAH,OACbP,EAAAb,EAAAC,cAACuB,EAAA,EAAD,CAASC,MAAO,CAAEC,cAAe,QAAUC,UAAU,YACnDd,EAAAb,EAAAC,cAAA,eAAM,IAAI2B,MAAOC,cAAjB,IAAiCT,KC4CtBU,IAhCA,SAAA1B,GAAyB,IAAtBF,EAAsBE,EAAtBF,MAAO6B,EAAe3B,EAAf2B,SACjBrB,EAAIsB,EAAAtB,KAWV,OACEG,EAAAb,EAAAC,cAAAY,EAAAb,EAAAiC,SAAA,KACEpB,EAAAb,EAAAC,cAACiC,EAAD,CAAKhC,MAAOA,IACZW,EAAAb,EAAAC,cAACuB,EAAA,EAAD,CAAMW,MAAM,UAAUC,KAAK,cACzBvB,EAAAb,EAAAC,cAACuB,EAAA,EAAKa,KAAN,KACExB,EAAAb,EAAAC,cAACuB,EAAA,EAAD,KAAYO,IAEdlB,EAAAb,EAAAC,cAACuB,EAAA,EAAKc,KAAN,KACEzB,EAAAb,EAAAC,cAACsC,EAAD,CAAQnB,OAAQV,EAAKF,KAAKI,aAAaQ","file":"component---src-pages-404-jsx-b82e271580a2470807b3.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\n\nconst NotFoundPage = () => (\n  <Layout title=\"404: Not found\">\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { Content } from \"rbx\"\n\nconst Footer = ({ author }) => (\n  <Content style={{ paddingBottom: '1rem' }} textAlign=\"centered\">\n    <p>Â© {new Date().getFullYear()} {author}</p>\n  </Content>\n)\n\nexport default Footer\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\nimport \"../style.scss\"\nimport { Container, Hero } from \"rbx\"\n\nimport SEO from \"./seo\"\nimport Footer from \"./footer\"\n\nconst Layout = ({ title, children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title,\n          author\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <SEO title={title} />\n      <Hero color=\"primary\" size=\"fullheight\">\n        <Hero.Body>\n          <Container>{children}</Container>\n        </Hero.Body>\n        <Hero.Foot>\n          <Footer author={data.site.siteMetadata.author} />\n        </Hero.Foot>\n      </Hero>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}