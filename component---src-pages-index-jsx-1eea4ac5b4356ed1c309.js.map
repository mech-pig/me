{"version":3,"sources":["webpack:///./src/components/emoji.jsx","webpack:///./src/pages/index.jsx","webpack:///./src/components/seo.jsx","webpack:///./src/components/socials.jsx","webpack:///./src/components/footer.jsx","webpack:///./src/components/layout.jsx"],"names":["Emoji","_ref","ariaLabel","text","react_default","a","createElement","role","IndexPage","layout","title","rbx","size","emoji","subtitle","href","SEO","description","lang","meta","site","_2417117884","data","metaDescription","siteMetadata","Helmet_default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","SocialIcon","faIcon","color","index_es","icon","Github","_ref2","githubName","socials_SocialIcon","fab","faGithub","Linkedin","_ref3","linkedinName","faLinkedin","SocialNavbar","_ref4","Fragment","socials_Github","socials_Linkedin","Footer","socials","style","paddingBottom","textAlign","components_socials","Date","getFullYear","Layout","children","_3300263566","seo","Body","Foot","footer","github","linkedin"],"mappings":"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","file":"component---src-pages-index-jsx-1eea4ac5b4356ed1c309.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\n\nconst Emoji = ({ ariaLabel, text }) => (\n  <span role=\"img\" ariaLabel={ariaLabel}>{text}</span>\n)\n\nEmoji.propTypes = {\n  ariaLabel: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n}\n\nexport default Emoji\n","import React from \"react\"\n\nimport Emoji from \"../components/emoji\"\nimport Layout from \"../components/layout\"\n\nimport { Content, Title } from \"rbx\";\n\nconst IndexPage = () => (\n  <Layout title=\"Home\">\n    <Title size={1}>\n      Hello! <Emoji text=\"ðŸ‘‹\" ariaLabel=\"waving-hand-sign\" />\n    </Title>\n    <Title size={3} subtitle>\n      My name is mechpig.\n    </Title>\n    <Content>\n      <p>I'm a software developer living in Milan, Italy.</p>\n      <p>A large part of my job consists of designing and building web APIs and helping others to do the same.\n      I work mainly in Python and Node.js, but I have an interest in programming languages and software development at large.\n      I always try to write clean, modular and concise code.</p>\n      <p>\n        I value{' '}\n        <a href=\"https://www.python.org/dev/peps/pep-0020/\">pragmatic minimalism</a>,{' '}\n        <a href=\"https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html\">clean architecture</a>,{' '}\n        <a href=\"https://www.michaelnygard.com/blog/2017/11/keep-em-separated/\">microservices</a>,{' '}\n        <a href=\"https://global.toyota/en/company/vision-and-philosophy/production-system/\">automation</a>{' '}\n        and <a href=\"https://www.fpcomplete.com/blog/2017/02/immutability-docker-haskells-st-type\">immutability</a>,{' '}\n        and try to pursue them whenever possible.\n      </p>\n      <p>I have a MSc in Computer Science from Politecnico di Milano.</p>\n    </Content>\n  </Layout>\n)\n\nexport default IndexPage\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { Icon } from \"rbx\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\n\n\nexport const SocialIcon = ({ faIcon, href }) => (\n  <a href={href}>\n    <Icon color=\"black\">\n      <FontAwesomeIcon icon={faIcon} size=\"large\" />\n    </Icon>\n  </a>\n)\n\nexport const Github = ({ githubName }) => (\n  <SocialIcon\n    faIcon={fab.faGithub}\n    href={`https://github.com/${githubName}`}\n  />\n)\n\nGithub.propTypes = {\n  githubName: PropTypes.string.isRequired,\n}\n\nexport const Linkedin = ({ linkedinName }) => (\n  <SocialIcon\n    faIcon={fab.faLinkedin}\n    href={`https://www.linkedin.com/in/${linkedinName}`}\n  />\n)\n\nLinkedin.propTypes = {\n  linkedinName: PropTypes.string.isRequired,\n}\n\nconst SocialNavbar = ({ githubName, linkedinName }) => (\n  <>\n    { githubName ? <Github githubName={githubName} /> : <></> }\n    { linkedinName ? <Linkedin linkedinName={linkedinName} /> : <></> }\n  </>\n)\n\nSocialNavbar.propTypes = {\n  githubName: PropTypes.string,\n  linkedinName: PropTypes.string,\n}\n\nexport default SocialNavbar\n","import React from \"react\"\n\nimport SocialNavbar from \"./socials\"\n\nimport { Content } from \"rbx\"\n\nconst Footer = ({ author, socials }) => (\n  <Content style={{ paddingBottom: '1rem' }} textAlign=\"centered\">\n    <SocialNavbar\n      githubName={socials.githubName}\n      linkedinName={socials.linkedinName}\n    />\n    <p>Â© {new Date().getFullYear()} {author}</p>\n  </Content>\n)\n\nexport default Footer\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\nimport \"../style.scss\"\nimport { Container, Hero } from \"rbx\"\n\nimport SEO from \"./seo\"\nimport Footer from \"./footer\"\n\nconst Layout = ({ title, children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title,\n          author,\n          socials {\n            github,\n            linkedin\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <SEO title={title} />\n      <Hero color=\"primary\" size=\"fullheight\">\n        <Hero.Body>\n          <Container>{children}</Container>\n        </Hero.Body>\n        <Hero.Foot>\n          <Footer\n            author={data.site.siteMetadata.author}\n            socials={{\n              githubName: data.site.siteMetadata.socials.github,\n              linkedinName: data.site.siteMetadata.socials.linkedin,\n            }}\n          />\n        </Hero.Foot>\n      </Hero>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}